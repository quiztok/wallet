"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _get = _interopRequireDefault(require("lodash/get"));

var _detectors = require("../utils/detectors");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function _default(t) {
  return function (path, state) {
    /**
     * Handles both "styled.div" and "styled_default.default.div" (transpiled output)
     */
    if ((0, _detectors.isStyled)(t)(path.node, state)) {
      /**
       * e.g. "div"
       */
      var sugar = (0, _get.default)(path, 'node.property.name');
      var isAssignment = t.isAssignmentExpression(path.parent);

      if (sugar && !isAssignment) {
        /**
         * If the left side of the function is a complex path, e.g.
         * "styled_default.default.div", we want to preserve the "styled_default.default"
         * part and just reuse that AST object.
         */
        var leftSide = t.isMemberExpression(path.node.object) ? path.node.object : t.identifier(path.node.object.name);
        /**
         * "styled.div" -> "styled('div')"
         */

        path.replaceWith(t.callExpression(leftSide, [t.stringLiteral(sugar)]));
      }
    }
  };
};

exports.default = _default;